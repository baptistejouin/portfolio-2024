---
import { ViewTransitions } from "astro:transitions";

import "@lib/scss/utils/minireset.min.css";
import "@lib/scss/utils/base.scss";
import "@lib/scss/utils/fonts.scss";

import Footer from "@components/Footer.astro";
import Nav from "@components/Nav.astro";
import StarShape from "@components/StarShape.astro";

const { frontmatter } = Astro.props;

const keywords = [...frontmatter.keywords.split(",")];
---

<!doctype html>
<html lang="fr">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={frontmatter.description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <meta name="generator" content={Astro.generator} />
    <title>{frontmatter.title}</title>
    <ViewTransitions />
  </head>
  <body>
    <header>
      <Nav currentPage={frontmatter.title} />
    </header>
    <div class="work">
      <main class="row">
        <h1 class="title" transition:persist transition:name="h1-work"></h1>
        <p class="keywords">
          {keywords.map((item) => <span>*{item.trim()}</span>)}
        </p>
        <slot />
      </main>
    </div>
    <Footer />
    <StarShape side="left" />
    <style lang="scss" is:global>
      @use "@lib/scss/variables" as v;

      .work {
        a {
          text-decoration: underline wavy;
          text-decoration-thickness: 0.1rem;
          text-decoration-skip-ink: none;
          color: v.$c-accent;

          &hover {
          }
        }
        h1,
        h2,
        iframe,
        h3,
        p {
          grid-column: span v.$num-grid-columns;
        }

        .keywords {
          grid-column: span v.$num-grid-columns;
          font-family: v.$ff-jetbrains;
          display: flex;
          flex-wrap: wrap;
          gap: 1rem;
          margin-bottom: 3.5rem;

          span {
            color: v.$c-accent;
            font-size: 1.25rem;
          }
        }

        p {
          font-size: 2rem;
          margin-bottom: 1.5rem;
          grid-column: 2 / span v.$num-grid-columns - 2;
          &:nth-child(3) {
            // first big image
            grid-column: span 9;
          }
          &:nth-child(4) {
            // first paragraph
            grid-column: 2 / span v.$num-grid-columns - 3 !important;
            margin-bottom: 5rem;
          }
          &:nth-child(2n) {
            grid-column: 1 / span v.$num-grid-columns - 3;
          }
        }

        img {
          display: block;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          width: 100%;
          height: 100%;
          background-color: gray;

          &::after {
            content: "";
            display: block;
            position: absolute;
            inset: 0;
            padding-top: 100%;
            background-color: gray;
          }
        }
      }
    </style>

    <script>
      document.querySelector("h1").textContent = location.pathname;
      document.addEventListener("astro:after-swap", () => {
        document.querySelector("h1").textContent = location.pathname;
      });
    </script>
  </body>
</html>
