---
import Card from "@components/Card.astro";
import StarShape from "@components/StarShape.astro";
import Layout from "@layouts/Layout.astro";

import animation3d from "@assets/animation-3d/01.png";
---

<Layout title="baptistejouin | my work." page="works">
  <main class="row">
    <h1 transition:persist transition:name="h1-work">/works</h1>
    <div class="filter">
      <button class="active" data-category="0">All</button>
      <button data-category="1">Animation 3D</button>
      <button data-category="2">Web</button>
      <button data-category="3">Graphic Design</button>
    </div>
    <Card
      to="/works/animation-3d"
      category="1"
      title="Animation 3D"
      img={{ src: animation3d, alt: "" }}
    />
    <Card
      to="/works/animation-3d"
      category="1"
      title="Animation 3D"
      img={{ src: animation3d, alt: "" }}
    />
    <Card
      to="/works/animation-3d"
      category="3"
      title="Animation 3D"
      img={{ src: animation3d, alt: "" }}
    />
    <Card
      to="/works/animation-3d"
      category="3"
      title="Animation 3D"
      img={{ src: animation3d, alt: "" }}
    />
    <p class="empty hidden">There is no work for this category. :(</p>
  </main>
  <StarShape offsetY={200} scale={0.6} side="left" />
</Layout>

<style lang="scss">
  @use "../lib/scss/variables" as v;
  @use "../lib/scss/mixins" as m;

  main {
    min-height: 80vh;
  }
  .filter {
    grid-column: span v.$num-grid-columns;
    margin-bottom: 3.5rem;

    button {
      font-size: 1.5rem;
      font-family: v.$ff-jetbrains;

      @include m.before(lg) {
        font-size: 1.25rem;
      }

      &.active {
        text-decoration: underline;
      }
    }
  }
  .empty {
    grid-column: span v.$num-grid-columns;
    text-align: center;
    font-size: 1.25rem;
    font-family: v.$ff-jetbrains;
    opacity: 0.5;
  }

  :global(.hidden) {
    display: none;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    document.querySelector("h1").textContent = location.pathname;

    const filters = document.querySelectorAll("div.filter button");
    const cards = document.querySelectorAll(
      "main > a"
    ) as NodeListOf<HTMLElement>;

    filters.forEach((filter: HTMLButtonElement) => {
      filter.addEventListener("click", () => {
        filters.forEach((filter) => filter.classList.remove("active"));
        filter.classList.add("active");

        const category = filter?.dataset.category;

        cards.forEach((card) => {
          if (category === "0") {
            card.classList.remove("hidden");
          } else if (card?.dataset?.category !== category) {
            card.classList.add("hidden");
          } else {
            card.classList.remove("hidden");
          }
        });

        if (!document.querySelector("main > a:not(.hidden)")) {
          document.querySelector("p.empty").classList.remove("hidden");
        } else {
          document.querySelector("p.empty").classList.add("hidden");
        }
      });
    });
  });
</script>
