---
import Link from "@components/Link.astro";

interface Props {
  currentPage: string;
}

const { currentPage } = Astro.props;
---

<header class="row">
  <nav>
    <button class="links mobile">Menu</button>
    <div class="nav mobile">
      <div>
        <a href="/works" class:list={{ active: currentPage === "works" }}
          >Works</a
        >
        <a href="/about" class:list={{ active: currentPage === "about" }}
          >About</a
        >
        <a href="/labs" class:list={{ active: currentPage === "labs" }}>Labs</a>
      </div>
    </div>
    <div class="links desktop">
      <Link href="/works" active={currentPage === "works"}>Works</Link>
      <Link href="/about" active={currentPage === "about"}>About</Link>
      <Link href="/labs" active={currentPage === "labs"}>Labs</Link>
    </div>
    <div class="icons">
      <a href="https://www.linkedin.com/in/baptistejouin/" target="_blank">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="36"
          height="36"
          viewBox="0 0 36 36"
          fill="none"
        >
          <path
            d="M10.41 7.5C10.4096 8.29565 10.0931 9.05855 9.53023 9.62088C8.96734 10.1832 8.20412 10.4989 7.40847 10.4985C6.61282 10.4981 5.84992 10.1816 5.28759 9.61876C4.72526 9.05587 4.40958 8.29265 4.40997 7.497C4.41037 6.70135 4.72682 5.93845 5.28971 5.37612C5.8526 4.81379 6.61582 4.4981 7.41147 4.4985C8.20712 4.4989 8.97003 4.81535 9.53235 5.37824C10.0947 5.94113 10.4104 6.70435 10.41 7.5ZM10.5 12.72H4.49997V31.5H10.5V12.72ZM19.98 12.72H14.01V31.5H19.92V21.645C19.92 16.155 27.075 15.645 27.075 21.645V31.5H33V19.605C33 10.35 22.41 10.695 19.92 15.24L19.98 12.72Z"
          ></path>
        </svg></a
      >
      <button class="moon">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          fill="none"
          ><g clip-path="url(#a)"
            ><path
              d="M13.333 8a10.666 10.666 0 0 0 15.94 9.275C28.632 24.04 22.933 29.333 16 29.333 8.636 29.333 2.667 23.364 2.667 16c0-6.933 5.293-12.632 12.058-13.273A10.617 10.617 0 0 0 13.333 8Zm-8 8a10.667 10.667 0 0 0 16.032 9.22 10.674 10.674 0 0 0 3.911-3.947c-.421.04-.848.06-1.276.06-7.364 0-13.333-5.969-13.333-13.333 0-.428.02-.853.06-1.276A10.675 10.675 0 0 0 5.333 16ZM24.22 3.055l1.114.278v1.334l-1.114.278a2.667 2.667 0 0 0-1.94 1.94L22 8h-1.333l-.279-1.115a2.665 2.665 0 0 0-1.94-1.94l-1.115-.278V3.333l1.115-.278a2.667 2.667 0 0 0 1.939-1.94L20.667 0H22l.279 1.115a2.666 2.666 0 0 0 1.94 1.94Zm6.666 6.666L32 10v1.333l-1.115.279a2.667 2.667 0 0 0-1.94 1.94l-.278 1.115h-1.334l-.278-1.115a2.667 2.667 0 0 0-1.94-1.94L24 11.333V10l1.115-.279a2.667 2.667 0 0 0 1.94-1.94l.278-1.114h1.334l.278 1.114a2.666 2.666 0 0 0 1.94 1.94Z"
            ></path></g
          ><defs
            ><clipPath id="a"
              ><path fill="#fff" d="M0 0h32v32H0z"></path></clipPath
            ></defs
          ></svg
        >
      </button>
      <button class="sun">
        <svg
          width="32"
          height="32"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          ><path
            d="M16 24a8 8 0 1 1 0-16 8 8 0 0 1 0 16Zm0-2.667a5.333 5.333 0 1 0 0-10.667 5.333 5.333 0 0 0 0 10.667Zm-1.333-20h2.666v4h-2.666v-4Zm0 25.334h2.666v4h-2.666v-4ZM4.687 6.572l1.885-1.885L9.4 7.515 7.515 9.4 4.687 6.572ZM22.6 24.485l1.885-1.885 2.828 2.828-1.885 1.885-2.828-2.828Zm2.828-19.8 1.885 1.887L24.485 9.4 22.6 7.515l2.828-2.828v-.002ZM7.515 22.6 9.4 24.485l-2.828 2.828-1.885-1.885L7.515 22.6Zm23.152-7.933v2.666h-4v-2.666h4Zm-25.334 0v2.666h-4v-2.666h4Z"
          ></path></svg
        >
      </button>
    </div>
  </nav>
</header>

<style lang="scss">
  @use "../lib/scss/variables" as v;
  @use "../lib/scss/mixins" as m;

  header {
    padding-top: 3.5rem;
  }
  nav {
    font-size: 1.125rem;
    font-family: v.$ff-jetbrains;
    grid-column: 2 / span v.$number-grid-columns - 2;
    display: flex;
    justify-content: space-between;
    align-items: center;

    @include m.before(sm) {
      grid-column: 1 / span v.$number-grid-columns;
    }
  }
  .links {
    display: flex;
    align-items: center;
    gap: 1.5rem;

    &.desktop {
      display: inline-flex;

      @include m.before(md) {
        display: none;
      }
    }

    &.mobile {
      display: none;

      @include m.before(md) {
        display: inline-flex;
      }
    }
  }

  .icons {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  svg {
    aspect-ratio: 1;
    height: 2rem;
    fill: v.$c-accent;
  }
  button.links {
    font-family: inherit;
    font-size: inherit;
    width: fit-content;
    display: inline-flex;
    padding: 0.875rem 1.75rem;
    justify-content: center;
    align-items: center;
    gap: 1.125rem;
    border-radius: 1rem;
    color: v.$c-black;
    border: 2px solid v.$c-black;
    background: v.$c-white;

    &:hover {
      background: v.$c-accent;
    }
  }
  .nav.mobile {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    backdrop-filter: blur(8px) brightness(0.6);
    -webkit-backdrop-filter: blur(8px) brightness(0.6);
    z-index: 1;
    display: none;

    flex-direction: column;
    justify-content: center;
    gap: 1.5rem;
    padding: 0 2rem;

    div {
      margin-top: -20vh;
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    a {
      font-size: 3rem;
      color: v.$c-white;
      text-decoration: none;
      text-transform: uppercase;
      font-family: v.$ff-jetbrains;
      font-weight: 700;
      letter-spacing: 0.1rem;
      transition: color 0.2s ease-in-out;

      &:hover {
        color: v.$c-accent;
      }

      &.active {
        color: v.$c-accent;
        text-decoration: underline wavy;
      }
    }

    @include m.before(md) {
      &.active {
        display: flex;
      }
    }
  }
  .sun,
  :global(html.dark) .moon {
    display: block;
  }

  :global(html.dark) .sun,
  .moon {
    display: none;
  }
</style>

<script>
  function initMobileNav() {
    const links = document.querySelector(".links.mobile");
    const nav = document.querySelector(".nav.mobile");
    const html = document.querySelector("html");

    links.addEventListener("click", () => {
      nav.classList.toggle("active");
      html.classList.add("no-scroll");

      addEventListener("resize", () => {
        html.classList.remove("no-scroll");
        nav.classList.remove("active");
      });
    });

    nav.addEventListener("click", () => {
      html.classList.remove("no-scroll");
      nav.classList.remove("active");
    });
  }

  function inittoggleTheme() {
    const moon = document.querySelector("nav button.moon");
    const sun = document.querySelector("nav button.sun");
    const html = document.querySelector("html");

    moon.addEventListener("click", () => {
      html.classList.remove("dark");
      localStorage.removeItem("theme");
    });

    sun.addEventListener("click", () => {
      html.classList.add("dark");
      localStorage.setItem("theme", "dark");
    });
  }

  initMobileNav();
  inittoggleTheme();

  document.addEventListener("astro:after-swap", () => {
    inittoggleTheme();
    initMobileNav();
  });
</script>
